{
    "common": {
        "name": "nightscout",
        "version": "0.10.4",
        "news": {
            "0.10.4": {
                "en": "Allowed node.js 12",
                "de": "Zulässigt node.js 12",
                "ru": "Разрешен node.js 12",
                "pt": "Nó permitido.js 12",
                "nl": "Toegestane node.js 12",
                "fr": "Node.js 12 autorisé",
                "it": "Nodo autorizzato.js 12",
                "es": "Nodo permitido.js 12",
                "pl": "Dozwolony node.js 12",
                "zh-cn": "允许的node.js 12"
            },
            "0.10.2": {
                "en": "change unit of reservoir level",
                "de": "Einheit des Vorratsbehälters ändern",
                "ru": "изменить единицу уровня резервуара",
                "pt": "alterar unidade do nível do reservatório",
                "nl": "verander eenheid van reservoirniveau",
                "fr": "changer l'unité du niveau du réservoir",
                "it": "cambia unità di livello del serbatoio",
                "es": "cambiar la unidad del nivel del depósito",
                "pl": "zmienić jednostkę poziomu w zbiorniku",
                "zh-cn": "储层水位变化单位"
            },
            "0.10.1": {
                "en": "small bugfix",
                "de": "kleiner Bugfix",
                "ru": "небольшое исправление",
                "pt": "pequeno bugfix",
                "nl": "kleine bugfix",
                "fr": "petit bugfix",
                "it": "piccolo bugfix",
                "es": "pequeña corrección de errores",
                "pl": "mała poprawka",
                "zh-cn": "小错误修正"
            },
            "0.10.0": {
                "en": " Add the possibility to use an external nightscout server again and add the cage & sage ",
                "de": " Fügen Sie die Möglichkeit hinzu, einen externen Nightcout-Server erneut zu verwenden, und fügen Sie den Käfig und den Salbei hinzu",
                "ru": " Добавьте возможность снова использовать внешний сервер nightcout и добавьте cage & sage",
                "pt": " Adicione a possibilidade de usar um servidor externo noturno novamente e adicione a gaiola e o sábio",
                "nl": " Voeg de mogelijkheid toe om opnieuw een externe nachtcoutserver te gebruiken en voeg de kooi & salie toe",
                "fr": " Ajouter la possibilité d'utiliser à nouveau un serveur de nightcout externe et d'ajouter la cage et la sauge",
                "it": " Aggiungi la possibilità di utilizzare di nuovo un server notturno esterno e aggiungi la gabbia e la salvia",
                "es": " Agregue la posibilidad de usar un servidor externo de nightcout nuevamente y agregue la jaula y la salvia",
                "pl": " Dodaj możliwość ponownego użycia zewnętrznego serwera Nightcout i dodaj klatkę i szałwię",
                "zh-cn": " 添加再次使用外部Nightscout服务器的可能性，并添加笼子和鼠尾草"
            },
            "0.9.7": {
              "en": "Fixed last Updated value",
              "de": "Letzter aktualisierter Wert behoben",
              "ru": "Фиксированное последнее обновленное значение",
              "pt": "Último valor atualizado fixo",
              "nl": "Vaste laatst bijgewerkte waarde",
              "fr": "Correction de la dernière valeur mise à jour",
              "it": "Risolto l'ultimo valore aggiornato",
              "es": "Se corrigió el último valor actualizado",
              "pl": "Naprawiono ostatnią zaktualizowaną wartość",
              "zh-cn": "固定最近更新的值"
            },
            "0.9.6": {
                "en": "Used newer version of nightscout",
                "de": "Benutzte neuere Version von nightscout",
                "ru": "Используется более новая версия nightcout",
                "pt": "Usado versão mais recente do nightscout",
                "nl": "Nieuwere versie van nightscout gebruikt",
                "fr": "Utilisé la nouvelle version de nightscout",
                "it": "Usato versione più recente di nightscout",
                "es": "Nueva versión usada de nightscout",
                "pl": "Użyto nowszej wersji nightscout",
                "zh-cn": "使用较新版本的nightscout"
            },
            "0.9.4": {
                "en": "initial release",
                "de": "Erstveröffentlichung",
                "ru": "Начальная версия",
                "pt": "lançamento inicial",
                "nl": "Eerste uitgave",
                "fr": "Première version",
                "it": "Versione iniziale",
                "es": "Versión inicial",
                "pl": "Pierwsze wydanie",
                "zh-cn": "首次出版"
            }
        },
        "title": "Nightscout server",
        "titleLang": {
            "en": "Nightscout server",
            "de": "Nightscout-Server",
            "ru": "Nightscout сервер",
            "pt": "Servidor Nightscout",
            "nl": "Nightscout-server",
            "fr": "Serveur Nightscout",
            "it": "Server Nightscout",
            "es": "Servidor nocturno",
            "pl": "Serwer Nightscout",
            "zh-cn": "Nightscout服务器"
        },
        "desc": {
            "en": "Provides nightscout server for sugar monitoring",
            "de": "Bietet einen Nightscout-server für die Zuckerüberwachung",
            "ru": "Предоставляет сервер nightscout для мониторинга сахара в крови",
            "pt": "Fornece servidor nightscout para monitoramento de açúcar",
            "nl": "Biedt nachtcoutserver voor suikercontrole",
            "fr": "Fournit un serveur nightscout pour la surveillance du sucre",
            "it": "Fornisce il server nightscout per il monitoraggio dello zucchero",
            "es": "Proporciona un servidor nightcout para monitoreo de azúcar.",
            "pl": "Zapewnia serwer nocny do monitorowania cukru",
            "zh-cn": "为糖监测提供nightscout服务器"
        },
        "authors": [
            "bluefox <dogafox@gmail.com>"
        ],
        "keywords": [
            "sugar monitoring",
            "nightscout",
            "we are not waiting"
        ],
        "license": "AGPL-3.0",
        "platform": "Javascript/Node.js",
        "main": "main.js",
        "messagebox": true,
        "icon": "nightscout.png",
        "enabled": true,
        "extIcon": "https://raw.githubusercontent.com/ioBroker/ioBroker.nightscout/master/admin/nightscout.png",
        "readme": "https://github.com/ioBroker/ioBroker.nightscout/blob/master/README.md",
        "loglevel": "info",
        "mode": "daemon",
        "type": "utility",
        "compact": true,
        "localLink": "%protocol%://%ip%:%port%/",
        "materialize": true
    },
    "native": {
        "local": true,
        "secure": false,
        "port": 1337,
        "bind": "127.0.0.1",
        "url": "https://localhost:1337",

        "mongo": "mongodb://localhost:27017/nightscout",
        "enabled": "careportal basal",
        "units": "mg/dl",
        "secret": "12345678901234",
        "timeFormat": 24,
        "language": "",
        "allowUnauthorized": false,
        "pumpFields": "reservoir battery",
        "envs": [{"name": "ENV_VARIABLE_EXAMPLE", "value": "value"}],
        "certPublic": "",
        "certPrivate": "",
        "certChained": "",
        "licenseAccepted": false,
        "osDependencies": {
            "linux": ["mongodb"]
        },

        "leEnabled": false
    },
    "objects": [],
    "instanceObjects": [
        {
            "_id":  "info",
            "type": "channel",
            "common": {
                "name": "Information"
            },
            "native": {}
        },
        {
            "_id":  "info.connection",
            "type": "state",
            "common": {
                "role":  "indicator.connected",
                "name":  "If connected to nightscout server",
                "type":  "boolean",
                "read":  true,
                "write": false,
                "def":   false
            },
            "native": {}
        },
        {
            "_id":  "trigger",
            "type": "channel",
            "common": {
                "name": "Information"
            },
            "native": {}
        },
        {
            "_id":  "trigger.picture",
            "type": "state",
            "common": {
                "role":  "button",
                "name":  "Create picture with phantomJS",
                "type":  "boolean",
                "read":  true,
                "write": false,
                "def":   false
            },
            "native": {}
        },
        {
            "_id": "data",
            "type": "channel",
            "common": {
                "name": "data"
            },
            "native": {}
        },
        {
            "_id": "data.device",
            "type": "state",
            "common": {
                "name": "Device description",
                "role": "state",
                "type": "string",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.pumpBattery",
            "type": "state",
            "common": {
                "name": "Pump battery",
                "role": "value.battery",
                "unit": "%",
                "min": 0,
                "max": 100,
                "type": "number",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.clock",
            "type": "state",
            "common": {
                "name": "Pump time",
                "role": "value.time",
                "type": "date",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.bolusiob",
            "type": "state",
            "common": {
                "name": "Bolus IOB",
                "role": "value",
                "type": "number",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.reservoir",
            "type": "state",
            "common": {
                "name": "Reservoir level",
                "role": "value.fill",
                "type": "number",
                "unit": "U",
                "min": 0,
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.bolusing",
            "type": "state",
            "common": {
                "name": "Bolusing",
                "role": "indicator",
                "type": "boolean",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.status",
            "type": "state",
            "common": {
                "name": "Status",
                "role": "state",
                "type": "string",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.suspended",
            "type": "state",
            "common": {
                "name": "Suspended",
                "role": "indicator",
                "type": "boolean",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.uploaderBattery",
            "type": "state",
            "common": {
                "name": "Uploader battery",
                "role": "value.battery",
                "unit": "%",
                "min": 0,
                "max": 100,
                "type": "number",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.mgdl",
            "type": "state",
            "common": {
                "name": "Sugar value",
                "role": "value.blood.sugar",
                "type": "number",
                "unit": "mgdl",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.mgdlScaled",
            "type": "state",
            "common": {
                "name": "mgdl Scaled",
                "role": "value",
                "type": "number",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.mgdlDirection",
            "type": "state",
            "common": {
                "name": "mgdl Direction",
                "role": "state",
                "type": "string",
                "states": {
                    "NONE": "⇼",
                    "TripleUp": "⤊",
                    "DoubleUp": "⇈",
                    "SingleUp": "↑",
                    "FortyFiveUp": "↗",
                    "Flat": "→",
                    "FortyFiveDown": "↘",
                    "SingleDown": "↓",
                    "DoubleDown": "⇊",
                    "TripleDown": "⤋",
                    "NOT COMPUTABLE": "-",
                    "RATE OUT OF RANGE": "⇕"
                },
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.lastUpdate",
            "type": "state",
            "common": {
                "name": "Last update",
                "role": "state",
                "type": "date",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.rawUpdate",
            "type": "state",
            "common": {
                "name": "Raw JSON",
                "role": "state",
                "type": "json",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.notification",
            "type": "state",
            "common": {
                "name": "Notification",
                "role": "state",
                "type": "string",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.urgentAlarm",
            "type": "state",
            "common": {
                "name": "Urgent alarm",
                "role": "indicator.alarm.health",
                "type": "boolean",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.alarm",
            "type": "state",
            "common": {
                "name": "Alarm",
                "role": "indicator.alarm.health",
                "type": "boolean",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.cage",
            "type": "channel",
            "common": {
                "name": "Cannula age",
                "role": "value",
                "type": "number",
                "unit": "h",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.cage.age",
            "type": "state",
            "common": {
                "name": "Cannula age total hours",
                "role": "value",
                "type": "number",
                "unit": "h",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.cage.days",
            "type": "state",
            "common": {
                "name": "Cannula age days",
                "role": "value",
                "type": "number",
                "unit": "d",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.cage.hours",
            "type": "state",
            "common": {
                "name": "Cannula age hours",
                "role": "value",
                "type": "number",
                "unit": "h",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.cage.changed",
            "type": "state",
            "common": {
                "name": "Cannula changed",
                "role": "value.time",
                "type": "date",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.sage",
            "type": "channel",
            "common": {
                "name": "Sensor age",
                "role": "value",
                "type": "number",
                "unit": "h",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.sage.age",
            "type": "state",
            "common": {
                "name": "Sensor age total hours",
                "role": "value",
                "type": "number",
                "unit": "h",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.sage.days",
            "type": "state",
            "common": {
                "name": "Sensor age days",
                "role": "value",
                "type": "number",
                "unit": "d",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.sage.hours",
            "type": "state",
            "common": {
                "name": "Sensor age hours",
                "role": "value",
                "type": "number",
                "unit": "h",
                "write": false,
                "read": true
            },
            "native": {}
        },
        {
            "_id": "data.sage.changed",
            "type": "state",
            "common": {
                "name": "Sensor changed",
                "role": "value.time",
                "type": "date",
                "write": false,
                "read": true
            },
            "native": {}
        }
    ]
}
